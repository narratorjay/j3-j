import bpy


'''
This code is backed up on GitHub using lunar.txt,
do not try to save .blend files there

Removed nine items (cylinders,blocks and an icosphere)
comprising a lunar base in the original landscape from TurboSquid
with this code:

BaseBuildings = bpy.data.collections.get('base')

for Building in BaseBuildings.objects:
    bpy.data.objects.remove(Building, do_unlink=True)

bpy.data.collections.remove(BaseBuildings)


# clear scene of previous blocks was
bpy.ops.object.select_all(action = 'DESELECT')
bpy.data.objects['B-321a'].select_set(True)
bpy.ops.object.delete() '''

# clear scene of previous blocks
AllObjects = bpy.data.objects
AllObjects.remove(AllObjects['B-321a'])
AllObjects.remove(AllObjects['LowCamera'])



# now get adding blocks with simple motion
EachBlock = 'B-321';  BScale = 10
MBlockXYZ = [ int(EachBlock[2:3]), int(EachBlock[3:4]), int(EachBlock[4:5]) ]
NewBlockXYZ = [MBlockXYZ[0]*BScale, MBlockXYZ[1]*BScale, MBlockXYZ[2]*BScale]
BDims = NewBlockXYZ
BCoords = [0, 0, 30]
bpy.ops.mesh.primitive_cube_add(location = (BCoords[0], BCoords[1], BCoords[2]), rotation = (0, 0, 0), scale = (BDims))
Stub = EachBlock
bpy.context.active_object.name = Stub + 'a'
bpy.context.active_object.data.name = Stub + 'a'

# material
bpy.context.active_object.name = 'B-321a'
bpy.context.active_object.data.name = 'B-321a'

bpy.data.materials.new('acrylic')
acrylicBpyMat = bpy.data.materials['acrylic']
acrylicBpyMat.use_nodes = True
bpy.data.objects['B-321a'].active_material = acrylicBpyMat

acrylicNodes = acrylicBpyMat.node_tree.nodes
acrylicRefraction = acrylicNodes.new( type = 'ShaderNodeBsdfRefraction' )
acrylicGlass = acrylicNodes.new( type = 'ShaderNodeBsdfGlass' )
acrylicGlass.inputs[1].default_value = 0.0

mixShader = acrylicNodes.new( type = 'ShaderNodeMixShader' )
acrylicOutput = acrylicNodes.new( type = 'ShaderNodeOutputMaterial' )

acrylicShaderLinks = acrylicBpyMat.node_tree.links
link = acrylicShaderLinks.new( acrylicRefraction.outputs[0], mixShader.inputs[1] )
link = acrylicShaderLinks.new( acrylicGlass.outputs[0], mixShader.inputs[2] )
link = acrylicShaderLinks.new( mixShader.outputs[0], acrylicOutput.inputs[0] )

input = acrylicNodes['Material Output'].inputs['Surface']
output = acrylicNodes['Glass BSDF'].outputs['BSDF']
acrylicShaderLinks.new(input, output)


# camera
bpy.ops.object.camera_add(enter_editmode = False, align='VIEW', location = (130, -130, 80), rotation = (1.5, 0, 0.8), scale = (1, 1, 1))
bpy.context.active_object.name = 'LowCamera'
bpy.context.active_object.data.name = 'LowCamera'
bpy.context.scene.camera = bpy.data.objects['LowCamera']


# basic motion

Frame = 1

# the keyframe line is what was missing before
ItemName = 'B-321a'
ItemInfo = bpy.data.objects[ItemName]
bpy.context.scene.frame_set(Frame)
ItemInfo.keyframe_insert(data_path = "location",index = -1)
print('ItemInfo before move:', ItemInfo.location)


Frame = 25

#ItemInfo = bpy.data.objects(ItemName)
bpy.context.scene.frame_set(Frame)
ItemInfo.location = (-3, 0, 100)
ItemInfo.keyframe_insert(data_path = "location",index = -1)
print('ItemInfo after move:', ItemInfo.location)




# specify transparent material properties
# film from exploratory drone
# glitch
# film drone filming glitching blocks

